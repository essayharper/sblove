pico-8 cartridge // http://www.pico-8.com
version 41
__lua__

function _init()
  -- game state
  game_states = {
    splash = 0,
    game = 1,
    gameover = 2
  }
  state = game_states.splash
  game_win = false

  -- palette rotations
  rot=pal_rotator({2,8,14},{8,9,10})
  rot2=pal_rotator({3,7,11},{5,13,6})

  -- music
  music(00,3000)

  -- animations
  -- ------------

  -- screenshake
  shake = 0
  shakex = 0
  shakey = 0

  -- tweens
  tweens = {}

  -- splash setup
  -- ------------

  -- bg_tiles
  bg_tiles = {}
  for i=0,15 do
    local w = (i%4)
    local z = (flr(i/4) + 1)
    local t = {
      sx = 40,
      sy = 8,
      sw = 8,
      sh = 8,
      dx = w*32,
      dy = (0 - z*32) - (i*128)*z,
      targetdy = 96 - (z*32-32),
      dw = 32,
      dh = 32,
    }
    add(bg_tiles,t)
  end

  -- title letters
  title_letters={
    t=0
  }
  for i=1,5 do -- smash
    local offset = 62
    local w = (i%5)
    local z = (flr(i/5) + 1)
    local letter = {
      spr = i*2 + offset,
      x = i*16 + 4 + i*1,
      targety = 63,
      y = -48,
      -- y = 0-(i*32)*z,
      a = 2,
      b = 2,
    }
    add(title_letters,letter)
  end
  for i=1,5 do -- below
    local offset = 94
    local w = (i%5)
    local z = (flr(i/5) + 1)
    local letter = {
      spr = i*2 + offset,
      x = i*16 + 4 + i*1,
      targety = 80,
      y = -32,
      -- y = 0-(i*128)*z,
      a = 2,
      b = 2,
    }
    add(title_letters,letter)
  end

  --explosions
  expl_all={}

  -- game setup
  -- ----------

  -- abilities
  abilities = {
    active_spr = 37
  }

  -- bombs
  bombs = {}

  --pickups
  pickups={}
  gold={}
  copper={}
  ruby={}
  blaster={}

  --globals
  g=
  {
    grav=0.2, -- gravity per frame
  }
  pickups_create(16,16,5,5)
  pickups_create(16,16,5,6)
  pickups_create(16,16,5,7)
  pickups_create(16,16,5,37)

  -- earth
  earth_create(16,48)
  earth_create_type(32,32,24)

  -- level
  level=0

  --player
  p1=
  {
    t=0,
    --position
    x=64,
    y=120,
    --velocity
    dx=0,
    dy=0,
    --direction
    dir=0,
    --destination
    dest=0,
    --sprite
    spr=1,
    hot=false,

    -- energy
    energy=16,

    -- charge
    charge = 0,

    --is the player standing on
    --the ground. used to determine
    --if they can jump.
    isgrounded=false,

    --tuning constants
    -- jumpvel=3.4,
    jumpvel=4,
    box={x1=0,y1=0,x2=7,y2=7},
  }
end

function change_state()
  if state == game_states.splash then
    state = game_states.game
  elseif state == game_states.game then
    state = game_states.gameover
  elseif state == game_states.gameover then
    state = game_states.splash
  end
end

function shake_screen()
  -- check if shaking
  if shake > 0 then
    shakex = rnd(4)-2
    shakey = rnd(4)-2
    shake -= 1/30
  end
end

function pal_rotator(from,to)
 local a,l=1,#to
 return function(s)
  for i,c in pairs(from) do
   pal(from[i],to[flr(i+a)%l+1])
  end
  a=a%l+s
 end
end

-- easing functions
function linear(elapsed, base_value, change, duration)
  return change * (elapsed / duration) + base_value
end
function in_out_quad(t,b,c,d)
  t/=d/2
  if (t<1) return c/2*t*t+b
  t-=1
  return -c/2*(t*(t-2)-1)+b
end
function out_bounce(t,b,c,d)
  t/=d
  if t < (1/2.75) then
    return c*(7.5625*t*t) + b
  elseif t < (2/2.75) then
    t-=(1.5/2.75)
    return c*(7.5625*t*t+.75)+b
  elseif t < (2.5/2.75) then
    t-=(2.25/2.75)
    return c*(7.5625*t*t+.9375)+b
  else
    t-=(2.625/2.75)
    return c*(7.5625*t*t+.984375)+b
  end
end

function tween(target, property, destination, duration, func)
  local tween_info = {
    target = target,
    property = property,
    base_value = target[property],
    change = destination - target[property],
    duration = duration,
    elapsed = 0,
    func = func
  }
  add(tweens,tween_info)
end

function tween_update()
  for t in all(tweens) do
    if t.elapsed > t.duration then
      t.target[t.property] = t.base_value + t.change
      del(tweens, t)
    else
      t.elapsed += 1
      t.target[t.property] = t.func(
        t.elapsed,
        t.base_value,
        t.change,
        t.duration)
    end
  end
end

function abs_box(s)
  local box = {}
  box.x1 = s.box.x1 + s.x
  box.y1 = s.box.y1 + s.y
  box.x2 = s.box.x2 + s.x
  box.y2 = s.box.y2 + s.y
  return box
end

function collide(a,b)
  local box_a = abs_box(a)
  local box_b = abs_box(b)
  if box_a.x1 > box_b.x2 or
     box_a.y1 > box_b.y2 or
     box_b.x1 > box_a.x2 or
     box_b.y1 > box_a.y2 then
     return false
  end
  return true
end

function expl_create(x,y, qty, options, layer)
  layer=layer or 1
  for n=0,qty do
    local obj={
      x=x,y=y,
      t=0,
      dur=30,
      rad=0,
      decay=.25,
      dia=0,
      colors={7,10,9,8},
      smin=.25,
      smax=1,
      grav=.3,
      dir=0,
      range=0,
      layer=layer
    }

    if options then
      for k,v in pairs(options) do obj[k] = v end
    end

    local c=flr(rnd(#obj.colors))+1
    local sp=rnd(obj.smax-obj.smin)+obj.smin

    if obj.dir>0 then
      local dirh=obj.range/2
      local dira=obj.dir-dirh
      local dirb=obj.dir+dirh

      obj.dir=rnd(dirb-dira)+dira
    else
      obj.dir=rnd()
    end

    obj.c=obj.colors[c]
    obj.g=rnd(abs(obj.grav))
    obj.dx=cos(obj.dir)*sp
    obj.dy=sin(obj.dir)*sp

    if obj.grav<0 then obj.g*=-1 end

    add(expl_all,obj)
  end
end

function expl_update()
  if #expl_all>0 then
    for o in all(expl_all) do
      o.dy+=o.g
      o.y+=o.dy
      o.x+=o.dx
      o.t+=1
      o.rad-=o.decay
      o.r=max(o.rad,0)

      if o.t>o.dur then del(expl_all,o) end
    end
  end
end

function expl_draw(layer)
  layer=layer or 1
  for e in all(expl_all) do
    if e.layer==layer then
      circfill(e.x,e.y, e.r, e.c)
    end
  end
end

function pickups_remove(count)
  while count > 0 do
    for k,v in pairs(pickups) do
      pickups[count]=nil
    end
    count-=1
  end
end

function pickups_create(from,to,count,type)
  while count > 0 do
    local x = flr(rnd(16))
    local y = flr(rnd(to)) + from
    local p = {
      x=x*8,
      y=y*8,
      spr=type,
      obtained=false,
      box={x1=0,y1=0,x2=7,y2=7},
    }
    add(pickups, p)
    count-=1
  end
end

function pickups_draw()
  for p in all(pickups) do
    if p.obtained == false then
      spr(p.spr, p.x, p.y)
    end
  end
end

function pickups_get()
  for p in all(pickups) do
    if collide(p1,p) then
      p.obtained = true
      if p.spr == 5 then
        add(gold,p)
        del(pickups,p)
        sfx(1)
        p1.energy += 1
      elseif p.spr == 6 then
        add(copper,p)
        del(pickups,p)
        sfx(2)
        p1.energy += 2
      elseif p.spr == 7 then
        add(ruby,p)
        del(pickups,p)
        sfx(3)
        p1.energy += 3
      elseif p.spr == 37 then
        add(blaster,p)
        del(pickups,p)
        sfx(1)
        sfx(2)
        sfx(3)
      end
    end
  end
end

function bomb_spawn(x,y)
  local b = {
    x=x,
    y=y,
    t=90
  }
  add(bombs, b)
end

function bombs_draw()
  for b in all(bombs) do
    spr(37,b.x,b.y)
  end
end

function bombs_detonate()
  for b in all(bombs) do
    if b.t > 0 then
      b.t -= 1
    else
      sfx(0)
      del(bombs, b)
      earth_detonate(b.x-8,b.x+8,b.y-8,b.y+8)
      -- create explosion
      custom_cfg={dir=.25,range=.25,x=b.x+4,y=b.y+16,rad=4,smax=8,colors={1,6,7,12,13,8},decay=.5,dur=30}
      expl_create(custom_cfg.x,custom_cfg.y, 24, custom_cfg, 1)
    end
  end
end

function level_create(input,output)
  -- wip: apply premade levels anywhere
  for x=0,15 do
    for y=input,input+15 do
      local spr = mget(x,input)
      mset(x,y,spr)
    end
  end
end

function earth_create(from,to)
  for x=0,15 do
    for y=from,to do
      local rnd = flr(rnd(3)) + 21 --sprite offset
      mset(x,y,rnd)
    end
  end
end

function earth_create_type(from,to,spr)
  for x=0,15 do
    for y=from,to do
      mset(x,y,spr)
    end
  end
end

function earth_remove(from,to)
  for x=0,15 do
    for y=from,to do
      mset(x,y,4)
    end
  end
end

function earth_move(from,to,destination)
  for x=0,15 do
    for y=from,to do
      local spr = mget(x,y)
      local new_y = y + destination
      mset(x,y,4)
      mset(x, new_y, spr)
    end
  end
end

function earth_shift()
  if p1.y > 255  and p1.isgrounded then
    -- earth_move(18,19,2)
    -- earth_create(18,19)
    p1.y = 120

    earth_move(0,48,-16)
    earth_create(16,48)
    earth_create_type(32,32,24)
    earth_remove(-32,0)
    for p in all(pickups) do
      p.y -= 128
    end
    level += 1
    pickups_remove(8)
    pickups_create(16,16,5,5)
    pickups_create(16,16,5,6)
    pickups_create(16,16,5,7)
    pickups_create(16,16,1,37)
  end
end

function flash()
  if(p1.t%16<8) then
    rectfill(0,0,16,16,7)
  else
    rectfill(0,0,16,16,8)
  end
end

function earth_detonate(sx,ex,sy,ey)
  for x=sx,ex do
    for y=sy,ey do
      local x = x/8
      local y = y/8
      local tile = mget(x,y)
      if tile == 24 then
        earth_remove(y-1,y)
      else
        mset(x,y,4)
      end
    end
  end
end

function remove_adjacent_earth(x,y,d)
  if     d == 1 then -- bottom
    xval = 4
    yval = 8
  elseif d == 2 then -- bottom left
    xval = -1
    yval = 8
  elseif d == 3 then -- left
    xval = -1
    yval = 4
  elseif d == 4 then -- top left
    xval = -1
    yval = -1
  elseif d == 5 then -- top
    xval = 4
    yval = -1
  elseif d == 6 then -- top right
    xval = 8
    yval = -1
  elseif d == 7 then -- right
    xval = 8
    yval = 4
  elseif d == 8 then -- bottom right
    xval = 8
    yval = 8
  end

  local tilex = (x+xval)/8 -- converts to map coords
  local tiley = (y+yval)/8

  local tile  = mget(tilex,tiley) -- gets initial tile sprite
  mset(tilex,tiley,4) -- removes initial tile

  if tile == 24 then
    earth_remove(tiley-1,tiley)
  end

  if tile >= 21 and tile <= 23 then

    -- deals with top, left, right, and bottom adjacent tilesw
    local topx = tilex
    local topy = tiley-1
    local top = mget(topx,topy)
    if tile == top then
      remove_adjacent_earth((topx*8)-4,(topy*8)-8,1) -- converts back from map to x/y coords
      mset(topx,topy,4)
    end

    local leftx = tilex-1
    local lefty = tiley
    local left = mget(leftx,lefty)
    if tile == left then
      remove_adjacent_earth((leftx*8)-4,(lefty*8)-8,1)
      mset(leftx,lefty,4)
    end

    local rightx = tilex+1
    local righty = tiley
    local right = mget(rightx,righty)
    if tile == right then
      remove_adjacent_earth((rightx*8)-4,(righty*8)-8,1)
      mset(rightx,righty,4)
    end

    local bottomx = tilex
    local bottomy = tiley+1
    local bottom = mget(bottomx,bottomy)
    if tile == bottom then
      remove_adjacent_earth((bottomx*8)-4,(bottomy*8)-8,1)
      mset(bottomx,bottomy,4)
    end
  end
end

function draw_ui()
  rectfill(32,p1.y-60,94,p1.y-50,1)
  -- energy
  spr(8,34,p1.y-58)
  print(p1.energy,44,p1.y-57,6)
  -- bombs
  spr(37,54,p1.y-58)
  print(#blaster,64,p1.y-57,6)
  -- level
  spr(9,74,p1.y-58)
  print(level,84,p1.y-57,6)
  -- charge
  rectfill(0,p1.y-60,30,p1.y-55,13)
  for i=0,4 do
    spr(12,i*6+1,p1.y-59)
  end
  for i=0,p1.charge-1 do
    spr(11,i*6+1,p1.y-59)
  end
  -- abilities
  rectfill(96,p1.y-60,128,p1.y-50,5)
  spr(abilities.active_spr,98,p1.y-58)
end

function draw_static_ui()
  rectfill(0,0,127,8,5)
  spr(5,0,0)
  spr(6,16,0)
  spr(7,32,0)
  print(#gold,10,2,7)
  print(#copper,26,2,7)
  print(#ruby,42,2,7)
  print(shift_map_at.." "..p1.y,80,2,8)
end

function move_player()

  --remember where we started
  local startx=p1.x

  -- calculate destination based on player x position
  local destx = p1.x + p1.dest

  --jump
  --

  --if on the ground and the
  --user presses x,c,or,up...
  if btnp(4)
   and p1.isgrounded then
   --launch the player upwards
    p1.dy=-p1.jumpvel
  end

  if btnp(5)
    and not p1.isgrounded
    and p1.dest == 0 then
    -- and p1.energy > 0 then
    p1.dy=p1.jumpvel
    p1.hot=true
    p1.spr=17
  end

  --walk
  --
  p1.dx=0

  if btnp(0) and p1.x > 0 then --left
    p1.dest-=8
    p1.dir = -1
  end
  if btnp(1) and p1.x < 120 then --right
    p1.dest+=8
    p1.dir = 1
  end

  -- checks where player is in relation to destination, stops when dest is reached.
  if p1.x < destx then
    p1.dx = 2
    p1.dest -= 2
  elseif p1.x > destx then
    p1.dx = -2
    p1.dest += 2
  else
    -- checks if player is on grid, corrects position if player is not on grid.
    if p1.x % 8 ~= 0 and p1.dir == 1 then
      p1.x+=1
    elseif p1.x % 8 ~= 0 and p1.dir == -1 then
      p1.x-=1
    end
  end

  --move the player left/right
  p1.x+=p1.dx

  --hit side walls
  --

  --check for walls in the
  --direction we are moving.
  local xoffset=0
  if p1.dx>0 then xoffset=7 end

  --look for a wall
  local h=mget((p1.x+xoffset)/8,(p1.y+7)/8)
  if fget(h,0) then
    --they hit a wall so move them
    --back to their original pos.
    --it should really move them to
    --the edge of the wall but this
    --mostly works and is simpler.
    p1.x=startx
  end

  --accumulate gravity
  p1.dy+=g.grav

  --fall
  p1.y+=p1.dy

  --hit floor
  --

  --check bottom center of the
  --player.
  local v=mget((p1.x+4)/8,(p1.y+8)/8)

  --assume they are floating
  --until we determine otherwise
  p1.isgrounded=false

  --only check for floors when
  --moving downward
  if p1.dy>=0 then
    --look for a solid tile
    if fget(v,0) then
      --place p1 on top of tile
      p1.y = flr((p1.y)/8)*8
      --halt velocity
      p1.dy = 0
      --allow jumping again
      p1.isgrounded=true
      p1.spr=1
    end
  end

  if (p1.dy>=0 and p1.hot==true) then
    --look for a solid tile
    if fget(v,0) then
      --place p1 on top of tile
      p1.y = flr((p1.y)/8)*8
      --halt velocity
      p1.dy = 0
      --allow jumping again
      p1.isgrounded=true
      p1.energy -= 1
      p1.hot=false
      p1.spr=1
      shake = .18

      local x1 = p1.x + p1.dx + sgn(p1.dx) * 0.3

      -- removes adjacent earth
      remove_adjacent_earth(p1.x,p1.y,1)

      p1.charge += 1

      -- create explosion
      custom_cfg={dir=.25,range=.25,x=p1.x+4,y=p1.y+16,rad=4,smax=8,colors={1,6,7,12,13,8},decay=.5,dur=30}
      expl_create(custom_cfg.x,custom_cfg.y, 24, custom_cfg, 1)

      sfx(0)
    end
  end

  --hit ceiling
  --check top center of p1
  v=mget((p1.x+4)/8,(p1.y)/8)

  --only check for ceilings when
  --moving up
  if p1.dy<=0 then
    --look for solid tile
    if fget(v,0) then
      --position p1 right below
      --ceiling
      p1.y = flr((p1.y+8)/8)*8
      --halt upward velocity
      p1.dy = 0
    end
  end
end

function charge_manage()
  if p1.charge < 5 then
    p1.charge += 1
  end
end

function ability_activate()
  if btnp(2) then
    if abilities.active_spr == 40 then
      abilities.active_spr = 37
    else
      abilities.active_spr += 1
    end
  end
  if btnp(3) then
    if abilities.active_spr == 37 then
      abilities.active_spr = 40
    else
      abilities.active_spr -= 1
    end
  end
end

function ability_use()
  -- if btn(2) and btnp(5) and #blaster > 0 then
  if btnp(5) and p1.isgrounded then
    sfx(1)
    bomb_spawn(p1.x,p1.y)
  end
end

function update_splash()
  expl_update()
  tween_update()
  title_letters.t += 1
  if title_letters.t >= 20 then
    for t in all(bg_tiles) do
      tween(t, 'dy', t.targetdy, 8, linear)
    end
  end
  if title_letters.t >= 80 then
    for l in all(title_letters) do
      tween(l, 'y', l.targety, 16, linear)
    end
  end
  if btnp(5) or btnp(4) then
    change_state()
  end
  for i=130,140,1 do
    if title_letters.t == i then
      random_explosion()
    end
  end
end

function random_explosion()
  sfx(0)
  shake = .18
  local rx = rnd(80) + 32
  local ry = rnd(64) + 48
  custom_cfg={dir=.25,range=.25,x=rx,y=ry,rad=4,smax=8,colors={2,3,8,11},decay=.5,dur=30}
  expl_create(custom_cfg.x,custom_cfg.y, 24, custom_cfg, 1)
end

function splash_background()
  pal(5,1)
  pal(13,0)
  pal(6,0)
  for t in all(bg_tiles) do
    sspr(t.sx,t.sy,t.sw,t.sh,t.dx,t.dy,t.dw,t.dh)
  end
  pal()
end

function title_draw()
  for l in all(title_letters) do
    spr(l.spr,l.x,l.y,l.a,l.b)
  end
end

function draw_splash()
  cls()
  splash_background()
  if shake > 0 then
    shake_screen()
  else
    shakex = 0
    shakey = 0
  end
  rot(.2) -- speed
  rot2(-.2) -- speed
    title_draw()
  pal()
  expl_draw(1) --draws on layer 1, behind object
  expl_draw(2) --draws on layer 2, in front of object
  camera(shakex, shakey)
  if title_letters.t >= 90 then
    rectfill(10,35,116,41,8)
    rectfill(11,34,115,42,8)
    if(title_letters.t%24<12) then
      print("press x or a to start game",12,36,2)
    else
      print("press x or a to start game",12,36,14)
    end
  end
end

function update_game()
  p1.t = p1.t + 1
  move_player()
  ability_use()
  ability_activate()
  expl_update()
  pickups_get()
  earth_shift()
  if #bombs > 0 then
    bombs_detonate()
  end
  if level > 0 then
    game_win = true
  end
  if p1.energy < 1 then
    change_state()
  end
end

function draw_game()
  cls() --clear the screen
  if shake > 0 then
    shake_screen()
  else
    shakex = 0
    shakey = 0
  end
  camera(shakex, shakey + p1.y-60)
  map(0,0,0,0,16,128) --draw map
  spr(p1.spr,p1.x,p1.y) --draw player
  expl_draw(1) --draws on layer 1, behind object
  expl_draw(2) --draws on layer 2, in front of object
  if #bombs > 0 then
    bombs_draw()
  end
  pickups_draw()
  draw_ui()
end

function draw_gameover()
  cls(1)
  camera(0,0)
  if game_win == false then
    print("game over :(")
    print("press x or z to restart game")
  elseif game_win == true then
    print("you win! :d")
    print("press x or z to restart game")
  end
end

function update_gameover()
  if btn(5) or btn(4) then
    _init()
  end
end

function _update()
  -- poke(0x5f2c, 7) -- lol
  if state == game_states.splash then
    update_splash()
  elseif state == game_states.game then
    update_game()
  elseif state == game_states.gameover then
    update_gameover()
  end
end

function _draw()
  if state == game_states.splash then
    draw_splash()
  elseif state == game_states.game then
    draw_game()
  elseif state == game_states.gameover then
    draw_gameover()
  end
end

__gfx__
00000000006666001111111d6666666dd0d0d0d00000000000000000000000000600000060000000006000000222000005550000000000000000000000000000
000000000655776055555551555555510d0d0d00000000000000000000000000007000600000000000070000288e200056675000000000000000000000000000
0000000006575560555555515555555150d0d000000aa0000009900000088000000c0700ccc00000000dc00628ee200056775000000000000000000000000000
00000000067555605555555155555551050d000000a97a00009479000082780000cac0000000000000cafd700222000005550000000000000000000000000000
000000000066660055555551555555515050000000a99a000094490000822800070c0000ddddd00007dfac000000000000000000000000000000000000000000
0000000000bb3300555555515555555105010000000aa00000099000000880006000700000000000600cd0000000000000000000000000000000000000000000
000000000a0b30905555555155555551501010000000000000000000000000000000060055555550000070000000000000000000000000000000000000000000
00000000008004005555555155555551010101000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000
0000000000cccc00000000000000000000000000dd55dd55dd11dd11ee22ee22bb33bb3300000000000000000000000000000000000000000000000000000000
000000000c9977c0000000000000000000000000d555d555d111d111e222e222b333b33300000000000000000000000000000000000000000000000000000000
000000000c9799c0000000000000000000000000d555d555d111d111e222e222b333b33300000000000000000000000000000000000000000000000000000000
000000000c7999c000000000000000000000000055565556111c111c222822283337333700000000000000000000000000000000000000000000000000000000
0000000000cccc00000000000000000000000000dd55dd55dd11dd11ee22ee22bb33bb3300000000000000000000000000000000000000000000000000000000
0000000000bb3300000000000000000000000000d555d555d111d111e222e222b333b33300000000000000000000000000000000000000000000000000000000
000000000a0b3090000000000000000000000000d555d555d111d111e222e222b333b33300000000000000000000000000000000000000000000000000000000
000000000080040000000000000000000000000055565556111c111c222822283337333700000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000070070000700700007007000070070000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000565565005655650056556500565565000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000088888800bbbbbb00cccccc00999999000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000082222228b333333bc111111c9444444900000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000082666628b366663bc166661c9466664900000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000082222228b333333bc111111c9444444900000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000088888800bbbbbb00cccccc00999999000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0eee88882222eee088000000000000880222eeee888822200eee88882222eee08800000000000088000000000000000000000000000000000000000000000000
eeee88882222eeee88800000000008882222eeee88882222eeee88882222eeee8800000000000088000000000000000000000000000000000000000000000000
ee0000000000000088880000000088882200000000000022ee000000000000008800000000000088000000000000000000000000000000000000000000000000
ee0000000000000088082000000e80882200000000000022ee000000000000008800000000000088000000000000000000000000000000000000000000000000
ee000000000000008800220000ee00882200000000000022ee000000000000008800000000000088000000000000000000000000000000000000000000000000
ee00000000000000880002200ee000882200000000000022ee000000000000008800000000000088000000000000000000000000000000000000000000000000
ee0000000000000088000022ee0000882200000000000022ee000000000000008800000000000088000000000000000000000000000000000000000000000000
eeee88882222eee088000002e00000882222eeee88882222eeee88882222eee088882222eeee8888000000000000000000000000000000000000000000000000
0eee88882222eeee88000000000000882222eeee888822220eee88882222eeee88882222eeee8888000000000000000000000000000000000000000000000000
00000000000000ee8800000000000088220000000000002200000000000000ee8800000000000088000000000000000000000000000000000000000000000000
00000000000000ee8800000000000088220000000000002200000000000000ee8800000000000088000000000000000000000000000000000000000000000000
00000000000000ee8800000000000088220000000000002200000000000000ee8800000000000088000000000000000000000000000000000000000000000000
00000000000000ee8800000000000088220000000000002200000000000000ee8800000000000088000000000000000000000000000000000000000000000000
00000000000000ee8800000000000088220000000000002200000000000000ee8800000000000088000000000000000000000000000000000000000000000000
eeee88882222eeee88000000000000882200000000000022eeee88882222eeee8800000000000088000000000000000000000000000000000000000000000000
0eee88882222eee0800000000000000820000000000000020eee88882222eee08000000000000008000000000000000000000000000000000000000000000000
3333bbbb777733300bbb77773333bbb007000000000000000333bbbb777733300b000000000000b0000000000000000000000000000000000000000000000000
3333bbbb77773333bbbb77773333bbbb77000000000000003333bbbb77773333bb000000000000bb000000000000000000000000000000000000000000000000
3300000000000033bb0000000000000077000000000000003300000000000033bb000000000000bb000000000000000000000000000000000000000000000000
3300000000000033bb0000000000000077000000000000003300000000000033bb000000000000bb000000000000000000000000000000000000000000000000
3300000000000033bb0000000000000077000000000000003300000000000033bb000000000000bb000000000000000000000000000000000000000000000000
3300000000000033bb0000000000000077000000000000003300000000000033bb000000000000bb000000000000000000000000000000000000000000000000
3300000000000033bb0000000000000077000000000000003300000000000033bb000000000000bb000000000000000000000000000000000000000000000000
3333bbbb77773330bbbb77770000000077000000000000003300000000000033bb000000000000bb000000000000000000000000000000000000000000000000
3333bbbb77773330bbbb77773000000077000000000000003300000000000033bb000007300000bb000000000000000000000000000000000000000000000000
3300000000000033bb0000000000000077000000000000003300000000000033bb000077330000bb000000000000000000000000000000000000000000000000
3300000000000033bb0000000000000077000000000000003300000000000033bb000770033000bb000000000000000000000000000000000000000000000000
3300000000000033bb0000000000000077000000000000003300000000000033bb007700003300bb000000000000000000000000000000000000000000000000
3300000000000033bb0000000000000077000000000000003300000000000033bb0b70000003b0bb000000000000000000000000000000000000000000000000
3300000000000033bb0000000000000077000000000000003300000000000033bbbb00000000bbbb000000000000000000000000000000000000000000000000
3333bbbb77773333bbbb77773333bbbb77773333bbbb77773333bbbb77773333bbb0000000000bbb000000000000000000000000000000000000000000000000
3333bbbb77773330bbbb77773333bbb077773333bbbb77700333bbbb77773330bb000000000000bb000000000000000000000000000000000000000000000000
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
__gff__
0000010100010101000000000000000000000000000101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404
__sfx__
010200003c61039610326102d6102a610286102561023610226102261021610206101f6101f6101f6101e6101e6101d6101d6101d6101d6101d6101c6101a61018610126100c6100761005610036100361002610
000200000c72010730137401073013740187501c7601f7701c7501f76024770007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
01020000187201c7301f7401c7301f74024750287602b770287502b76030770180001a0001c00025000270002500027000240002600028000290003000032000340003500037000390003b0003c0000000000000
0102000024720287302b740287302b74030750347603777034750377603c770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000000011000131001110010003111031310311103100001110013100111001000715107131071110710006111061310615106171061510613106111061000311103131031510317103151031310311103100
011000000011000131001110010003111031310311103100071110713107111071000c1110c1310c1110c1000a1110a1310a1110a100061110613106111061000711107131071510717107151071310711107100
011000000c0550f0550c0550f055110550f0551105513055180551b055180551b0551d0551b0551d0551f0552405522055200551f0551d0551b0551a0551805518055180551b0551d0551f055240512405124051
01100000170000c0531700000003000033c6150000300003000030c0530000300003000033c6150000300003000030c0530000300003000033c6150000300003000030c0530000300003000033c6151700000003
011000001800518055000050000500005130550000500005000051105500005000050000513055000050000512005140550000500005000050f0550000500005000050e055000050000500005130550d00500005
01100000180050c0550000500005000050f0550000500005000051105500005000050000513055000050000512005140550000500005000051205500005000050000513055000050000500005180550d00500005
0110000018005180551605515055130051305500005000050000511055000050000500005130551405513055120051405500005000050000513055110550f055000050e0550e0050000500005130551405513055
011000001800518055160051500513005180551a0551b055000051d0550000500005000051d0551f05520055120051f055000050000500005210552305524055000051f0552100500005000051f0551e0551f055
0110000030005300550000533005330053305532055300552b0553005500005290052900529055000052900529005290552b0552c0552b055290552700500005290052b055290552b0552c0552b0552b0052b005
00100020180551805515055150551605516055000050000500005000050000500005000050000500005000051d0551d0551a0551a0551b0551b05500005000051600516005000050000500005000050000500005
010f00001b0551a0551905518055000001b0551a0051a0551800516055000001305500000180551c0551f0552305521055200551f0551d0551c0551b0551c0551105500000000000000000000000000000000000
__music__
00 08424344
01 094a4344
01 080b4344
00 090b4344
00 080b0c44
00 090b0d44
00 080b0e44
00 090b0f44
00 080b1044
01 080b4344
00 090b4344
00 0a4a4344
02 00424344
01 11424344
02 11124344

